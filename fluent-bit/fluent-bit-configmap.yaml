apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: kube-system
  labels:
    k8s-app: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     debug
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
        Health_Check  On

    [INPUT]
        Name              tail
        Path              /var/log/pods/*/*/*.log
        Exclude_Path      /var/log/pods/*fluent*/*/*.log
        Tag               kube.var.log.containers.*
        #multiline.parser docker, cri
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  5

    [FILTER]
        Name                kubernetes
        #Match              kube-tail.*
        Match               kube.*
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Kube_Tag_Prefix     kube.var.log.containers.
    
    [FILTER]
        Name              lua
        Match             kube.*
        script            mask_credit_card.lua
        call              mask_cc_number

    [OUTPUT]
        Name            es
        Match           *
        Host            192.168.20.231
        Port            9200
        Logstash_Format On
        Logstash_Prefix fluent-bit
        Retry_Limit     False
        HTTP_User       ${FLUENT_ELASTICSEARCH_USER}
        HTTP_Passwd     ${FLUENT_ELASTICSEARCH_PASSWORD}
        Suppress_Type_Name On
        Buffer_Size     4MB
        Trace_Error    On

  parsers.conf: |
    [PARSER]
        Name   docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%LZ
        Decode_Field_As escaped_utf8 log do_next
        Decode_Field_As json log

  mask_credit_card.lua: |
    function mask_cc_number(tag, timestamp, record)
        local log = record["log"]
        if log then
            record["log"] = string.gsub(log, "%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d", "****************")
        end
        return 1, timestamp, record
    end